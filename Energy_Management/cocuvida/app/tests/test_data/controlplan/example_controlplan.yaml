name: 'example_controlplan' # used as the plan id and alias

# MAIN ENTRY 1. TARGET DEVICES TO BE OPERATED -> include one or more sub-entries
target:
  # each target needs to be implemented as its own module/unit in the application

  exampletarget: # example target for testing
    include_entry: true # enable/disable target
    entries:
      # some key: some val
      knob_1: 'some value for knob 1'
      knob_2: 'some value for knob 2'

  # shelly switches
  shelly: # valid states are on, off or toggle
    include_entry: false # enable/disable target
    # http auth (it is required, for security reasons.. so please set this on all shelly devices)
    user: admin
    password: password
    # shelly devices to control
    entries:
      # alias: [ host/ip, switch id ]
      light_a_basement_0: ['192.168.1.144', '0']
      light_b_basement_0: ['192.168.1.145', '0']
      light_b_basement_1: ['192.168.1.145', '1']

  # entry 2. MQTT subscribers
  # cocuvida application uses the name of this controlplan for topic
  # e.g. topic for this controlplan will be set to -> "cocuvida/controlplan/example_controlplan"
  mqtt: # will use client id cocuvida
    include_entry: false # enable/disable target
    user: user
    password: password
    host: '192.168.1.11'
    port: '1883'
    client_id: 'cocuvida_example_controlplan'
    entries:
      alias_1:
        qos: '0'
        topic: 'topic/for/alias_1'
        message: 'a single line message for alias_1'
      alias_2:
        qos: '0'
        topic: 'topic/for/alias_2'
        message: >
          this is a multi
          line message
          for alias_2

# MAIN ENTRY 2. CALENDAR FOR OPERATION -> include one or more sub-entries
calendar:

  # entry 1. exclude these dates (overrides all other entries)
  exclude_dates:
    include_entry: false
    entries:
      - '--03-18' # this will set every March 18. every year as included
      - '2021-06-17' # this will set June 17. only in year 2021 year as included

  # entry 2. include these dates (overrides all other entries except exclude_dates)
  include_dates: 
    include_entry: true
    entries:
      - '--03-17' # this will set every March 17. every year as included
      - '2022-06-17' # this will set June 17. only in year 2022 year as included

  # NOT IMPLEMENTED YET - entry 3. include|exclude non fixed date holidays (overrides weekdays)
  holidays:
    include_entry: false
    palm_sunday: true
    maundy_thursday: true # skjeartorsdag
    good_friday: true # langfredag
    holy_saturday: true # paaskeaften
    easter_sunday: true # foerste paaskedag
    easter_monday: true # andre paaskedag

  # entry 4. exclude fixed weekdays for operation (takes precedence over include_weekdays)
  exclude_weekdays:
    include_entry: false
    entries:
      - 'sunday'

  # entry 5. include fixed weekdays for operation (will only be included if not excluded in any of the other entries)
  include_weekdays:
    include_entry: true
    entries:
      - 'monday'
      - 'tuesday'
      - 'wednesday'
      - 'thursday'
      - 'friday'
      - 'saturday'
      - 'sunday'


# MAIN ENTRY 3. SCHEDULE FOR OPERATION -> include ONLY one sub-entry (time, sun or elspot)
schedule: # this is where we define different states for each target and the time of the state

  # entry 1. time dependent
  time: # can include multiple entries for multiple ON/OFF states during the day
    include_entry: true # enable/disable schedule
    entries:
      # [ time, target, state/value ]
      - ['11:00', 'shelly', 'on']
      - ['12:00', 'shelly', 'off']
      - ['12:00', 'exampletarget', '60']
      - ['17:30', 'shelly', 'toggle']
      - ['17:30', 'mqtt', 'alias_1']
      - ['18:30', 'mqtt', 'alias_2']

  # entry 2. astro (sun) dependent
  sun: # NOTE: remember to include coordinates
    include_entry: false # enable/disable schedule
    latitude: '59.911491'
    Longitude: '10.757933'

    rise: # X minutes after|before sunrise
      include_entry: false
      entries:
        # [ minutes (+|-), target, state/value ]
        - ['15', 'shelly', 'off']
        - ['-15', 'shelly', 'on']

    set: # X minutes after|before sunset
      include_entry: false
      entries:
        # [ minutes (+|-), target, state/value ]
        - ['15', 'mqtt', 'sleep']
        - ['-15', 'mqtt', 'tight']

    above: # when sun is above altitude (from -90 to 90)
      include_entry: false
      entries:
        # [ altitude (+|-), target, state/value ]
        - ['10', 'exampletarget', '40']
        - ['-10', 'exampletarget', '30']

    below: # when sun is below altitude (from -90 to 90)
      include_entry: false
      entries:
        # [ altitude (+|-), target, state/value ]
        - ['10', 'exampletarget', '40']
        - ['-10', 'exampletarget', '30']

  # entry 3. elspot price dependent
  elspot:
    include_entry: false # enable/disable schedule
