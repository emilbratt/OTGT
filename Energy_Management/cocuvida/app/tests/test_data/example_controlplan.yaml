name: 'example_controlplan' # used as the plan id and alias

# MAIN ENTRY 1. TARGET DEVICES TO BE OPERATED -> include one or more sub-entries
target:
  # each target needs to be implemented as its own module/unit in the application

  exampletarget: # example target that takes values 0-100 (%)
    include_entry: true # enable/disable entry
    entries:
      # some key: some val
      knob_1: '192.168.1.134'
      knob_2: '192.168.1.135'

  # shelly switches
  shelly: # valid states are on, off or toggle
    include_entry: true # enable/disable entry
    entries:
      # alias: [host, switch-id]
      light_a_basement_0: ['192.168.1.144', '0']
      light_b_basement_0: ['192.168.1.145', '0']
      light_b_basement_1: ['192.168.1.145', '1']

  # entry 2. MQTT subscribers
  # cocuvida application uses the name of this controlplan for topic
  # e.g. topic for this controlplan will be set to -> "cocuvida/example_controlplan"
  mqtt:
    include_entry: true # enable/disable entry
    entries:
      # ref key: message being sent -> ref the value as the state so message for that state is sent
      msgrefa: this is a message being sent for message ref msgrefa
      msgrefb: >
        this is a multi line message that
        will be sent for message ref msgrefb

# MAIN ENTRY 2. CALENDAR FOR OPERATION -> include one or more sub-entries
calendar:

  # entry 1. exclude these dates (overrides all other entries)
  exclude_dates:
    include_entry: true
    entries: # '--MM-DD' for every year | 'YYYY-MM-DD' for specific year
      - '2022-06-01'

  # entry 2. include these dates (overrides all other entries except exclude_dates)
  include_dates: 
    include_entry: true
    entries: # '--MM-D' for every year | 'YYYY-MM-DD' for specific year
      - '--03-17'
      - '2023-06-17'

  # NOT IMPLEMENTED YET - entry 3. include|exclude non fixed date holidays (overrides weekdays)
  holidays:
    include_entry: true
    palm_sunday: true
    maundy_thursday: true # skjeartorsdag
    good_friday: true # langfredag
    holy_saturday: true # paaskeaften
    easter_sunday: true # foerste paaskedag
    easter_monday: true # andre paaskedag

  # entry 4. include|exclude fixed weekdays for operation
  weekdays:
    include_entry: true
    monday: true
    tuesday: true
    wednesday: true
    thursday: true
    friday: true
    saturday: true
    sunday: true


# MAIN ENTRY 3. SCHEDULE FOR OPERATION -> include ONLY one sub-entry (time, sun or elspot)
schedule: # this is where we define different states for each target and the time of the state

  # entry 1. time dependent
  time: # can include multiple entries for multiple ON/OFF states during the day
    include_entry: true
    entries:
      # [ time, target, state/value ]
      - ['11:00', 'shelly', 'on']
      - ['12:00', 'exampletarget', '60']
      - ['12:00', 'mqtt', 'msgrefa']
      - ['13:00', 'mqtt', 'msgrefb']
      - ['17:30', 'shelly', 'off']

  # entry 2. astro (sun) dependent
  sun: # NOTE: remember to include coordinates
    include_entry: false
    latitude: '59.911491'
    Longitude: '10.757933'

    rise: # X minutes after|before sunrise
      include_entry: false
      entries:
        # [ minutes (+|-), target, state/value ]
        - ['15', 'shelly', 'off']
        - ['-15', 'shelly', 'on']

    set: # X minutes after|before sunset
      include_entry: false
      entries:
        # [ minutes (+|-), target, state/value ]
        - ['15', 'mqtt', 'sleep']
        - ['-15', 'mqtt', 'tight']

    above: # when sun is above altitude (from -90 to 90)
      include_entry: false
      entries:
        # [ altitude (+|-), target, state/value ]
        - ['10', 'exampletarget', '40']
        - ['-10', 'exampletarget', '30']

    below: # when sun is below altitude (from -90 to 90)
      include_entry: false
      entries:
        # [ altitude (+|-), target, state/value ]
        - ['10', 'exampletarget', '40']
        - ['-10', 'exampletarget', '30']

  # entry 3. elspot price dependent
  elspot:
    include_entry: false

    fixed_operation_time: # will always run at this time
      include_entry: false
      entries:
        # [ time, target, state/value ]
        - ['03:30', 'shelly', 'on']
        - ['17:30', 'shelly', 'off']

    minimum_operation_time: # at least X minutes a day
      include_entry: false
      entries:
        # [ minutes, target, state/value ]
        - ['120', 'shelly', 'on'] # will set switch OFF after 120 minutes
        - ['45', 'percent', '30'] # will set percent 0 after 45 minutes

    minimum_operation_time_day_part: # at least X minutes for Y part of the day
      include_entry: false
      post_midnight: # from 00 to 06
        include_entry: false
        entries:
          # [ minutes, target, state/value ]
          - ['45', 'percent', '30'] # will set percent 0 after 45 minutes
      before_midday: # from 06 to 12
        include_entry: false
        entries:
          # [ minutes, target, state/value ]
          - ['45', 'percent', '30'] # will set percent 0 after 45 minutes
      post_midday: # from 12 to 18
        include_entry: false
        entries:
          # [ minutes, target, state/value ]
          - ['45', 'percent', '30'] # will set percent 0 after 45 minutes
      before_midnight: # from 18 to 00
        include_entry: false
        entries:
          # [ minutes, target, state/value ]
          - ['45', 'percent', '30'] # will set percent 0 after 45 minutes
