Written: 13.12.2020 by Emil Bratt BÃ¸rsting

1. Download Raspberry Pi OS 32 bit and write to sd-card.

2. ..run commands
$ sudo raspi-config
Connect to network wifi, enable auto login to Text console and enable ssh, set date/time


3. Update system
$ sudo apt update && sudo apt upgrade -y

4. change password for pi user
$ passwd


5. Install dependencies for script
$ sudo apt install unixodbc -y
$ sudo apt install unixodbc-dev -y
$ sudo apt install freetds-dev -y
$ sudo apt install tdsodbc -y
$ sudo apt install freetds-bin -y
$ sudo apt install python3-pip -y
$ pip3 install --user pyodbc
$ pip3 install --user gpiozero
$ pip3 install --user RPi.GPIO

6. Add at bottom of FreeTDS conf file:
sudo nano /etc/freetds/freetds.conf

[sqlserver]
      host = <ip/hostname> # Remote Sql Server's IP addr
      port = <1433> # this is default port, you can change it
      tds version = 7.4 # version number by the time I write this
      instance = <dbname> # Database name



7. Create DSN (add to file)
$ sudo nano /etc/odbcinst.ini

(add text under)
[FreeTDS]
Description = FreeTDS unixODBC Driver
Driver = /usr/lib/arm-linux-gnueabihf/odbc/libtdsodbc.so
Setup = /usr/lib/arm-linux-gnueabihf/odbc/libtdsodbc.so
UsageCount = 1
(save and exit)

$ sudo nano  /etc/odbc.ini

(add text under)
[FreeTDS]
Driver = /usr/lib/arm-linux-gnueabihf/odbc/libtdsodbc.so
Description = MSSQL Server
Trace = No
Server = <ip/hostname> # IP or host name of the Sql Server
Database = <DBNAME> # Database name
Port = <1433> # This is default, but you can change it
TDS_Version = 7.4 # as of 01.12.2020, you can change it
(save and exit)

8. Create mountpoint for usb
Format a usb with fat32 and label pi/PI
$ mkdir /home/pi/usb
$ sudo nano /etc/fstab
(add text to bottom)
LABEL=PI /home/pi/usb        vfat	user,auto,uid=pi,x-systemd.device-timeout=0     0       2
(save and exit)

put script to use on usb..
Structure like this:
credentials file goes into /home/pi/credentials.json
if no credential file, run ./main.py credentials (using the credentials flag to add new credentials)
rest of files/folders goes into /home/pi/usb/..


9. Make boot script and add to .bashrc
$ nano /home/pi/.bashrc

(add text to bottom)
cd /home/pi/usb
python3 /home/pi/usb/main.py
(save and exit)


optional...
#################
Make boot script to run after boot -> for multi-user (systemd)
$ nano nameofscript.py
	write the script....


$ nano nameofscript.service
(add text)
[Unit]
Description=what script does
After=multi-user.target

[Service]
User=pi
Group=pi
WorkingDirectory=/home/pi/
Type=simple
ExecStart=/usr/bin/python3 /home/pi/nameofscript.py
KillMode=process

[Install]
WantedBy=multi-user.target
(save and exit)

$ sudo cp nameofscript.service /etc/systemd/system/nameofscript.service
$ sudo systemctl enable update_shelf.service
####################



Links:
https://www.it-admins.com/raspberry-pi-and-microsoft-sql-databases/
http://www.pymssql.org/_mssql_examples.html
https://raspberrypi.stackexchange.com/questions/60792/install-python-module-pyodbc-on-pi
https://stackoverflow.com/questions/57269988/unable-to-get-odbc-driver-17-for-sql-server-on-raspbian-10-buster
https://www.raspberrypi.org/forums/viewtopic.php?t=16120
https://python-tds.readthedocs.io/en/latest/pytds.html
https://gist.github.com/rduplain/1293636
https://pymssql.readthedocs.io/en/latest/index.html#
https://github.com/facebook/prophet/issues/418

This:
https://stackoverflow.com/questions/44969924/querying-mssql-server-2012-from-a-raspberry-pi-3-using-python-freetds-and-pyodb
https://github.com/mkleehammer/pyodbc/wiki/Connecting-to-SQL-Server-from-Linux
